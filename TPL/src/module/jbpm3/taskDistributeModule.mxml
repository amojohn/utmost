<?xml version="1.0" encoding="utf-8"?>
<mx:Module xmlns:mx="http://www.adobe.com/2006/mxml" layout="vertical" width="100%" height="100%"
	 creationComplete="init()">
	 <mx:Script>
	 	<![CDATA[
	 		import mx.events.CloseEvent;
	 		import mx.collections.ArrayCollection;
	 		import mx.rpc.events.ResultEvent;
	 		import org.utmost.service.AutoService;
	 		import mx.core.IFlexDisplayObject;
	 		import mx.managers.PopUpManager;
	 		import mx.controls.Alert;
	 		import org.utmost.tpl.PopType;
	 		import org.utmost.img.BindImg;
	 		import mx.rpc.events.FaultEvent;
	 		import org.utmost.service.StaticChannelSet;
			import org.utmost.component.upload.FileUpload;
			import org.utmost.service.UtmostService;
			import mx.collections.SortField;
            import mx.collections.Sort;

			import mx.events.ListEvent;
	 		private var tablename:String="TASKROLE";
	 		private function init():void {
	 			//dataInit();
	 		}
	 		
	 		public function dataInit():void {
	 			getProdefTask();
	 		}
	 		
	 		
	 		
			/**
			 * 为每一个任务节点分配审批人员
			 * 
			 * */
			private function taskDistr():void {
				
				var obj:Object;
				obj=PopUpManager.createPopUp(this.parentApplication as DisplayObject, taskDistributeComponent, true);
				obj.$adg=adg;
				obj.$dataInit=dataInit;
				obj.$procdefName = combo_prodef.selectedItem.name;
				obj.$procdefId = combo_prodef.selectedItem.id;
				PopUpManager.centerPopUp(obj as IFlexDisplayObject);
			}
			
			private function faultHandler(event:FaultEvent):void {
				trace(event.fault);
     	     }
     	     
     	     
	       /*
	       * 
	       *获取所有工作流流程定义
	       */
	       public function resultReturnfindProcessDefinition(e:ResultEvent):void{
	       		var ac:ArrayCollection=new ArrayCollection();
	       		if(e.result!=null){
	       			ac=e.result as ArrayCollection;
	       			adg.dataProvider = ac;
	       		}
	       }
	       /**
	       * 根据流程定义ID删除流程定义
	       */
	       public function resultReturnRemoveProceDef(e:ResultEvent):void{
				
	       		Alert.show("流程定义删除成功","提示");
				dataInit();
	       }
	       /**
	       * 获取所有的流程定义
	       */
	       public function  findProcessDef():void{
	       		var us:UtmostService=new UtmostService("JBPMService",function(e:ResultEvent):void {
        			if(e.result!=null){
        				combo_prodef.dataProvider = e.result as ArrayCollection;
        				getProdefTask();
        			}	
        		});
        		us.ro.findProcessDefinition();
	       }
	       public function changeCombo_prodef( event:ListEvent):void{
	       		
	       		getProdefTask();
	       		
	       //	event.currentTarget.selectedItem.@value;
	       }
	       //获取流程定义节点权限分配情况
	       public function getProdefTask():void{
	       		var procdefName:String = combo_prodef.selectedItem.name;//流程定义名称
        		var service:AutoService=new AutoService();
				service.findByHql("from "+tablename+" v where v.processname='"+procdefName+"' order by v.taskid",function(e:ResultEvent):void{
					
					adg.dataProvider= e.result as ArrayCollection;
				});	
	       }
	       //安数值大小排序
   			public function sortcompare(obj1:Object,obj2:Object):int{
   		        var num1:Number=Number(obj1.taskId.toString());
                
                var num2:Number=Number(obj2.taskId.toString());
                
                if(num1>num2){
                      return 1;
                 }else if(num1<num2){
                      return -1;
                 }else{
                      return 0;
                 }
            }
            public function startProcess():void{
            	var us:UtmostService=new UtmostService("JBPMService",function(e:ResultEvent):void {
        			if(e.result!=null){
        				
						trace(e.result);
        			}	
        		});
        		var procdefName:String = combo_prodef.selectedItem.name;//流程定义ID
        		if(procdefName!=""){
        			var ac:ArrayCollection = new ArrayCollection();
        			var obj :Object = new Object();
        			obj.comment = "测试";
        			obj.regteller = "guo";
        			us.ro.startProcessInstance(obj,procdefName);
        		}	
            }
            public function nextProcess():void{
            	var us:UtmostService=new UtmostService("JBPMService",function(e:ResultEvent):void {
        			if(e.result!=null){
        				
						trace(e.result);
        			}	
        		});
        		var procdefName:String = combo_prodef.selectedItem.name;//流程定义ID
        		if(procdefName!=""){
        			var ac:ArrayCollection = new ArrayCollection();
        			var obj :Object = new Object();
        			obj.comment = "还是测试111";
        			obj.taskid = taskid.text;
        			obj.route = "next";
        			obj.actorid = "guo112211";
        			us.ro.toNextProce(obj);
        		}	
            }
            

	 	]]>
	 </mx:Script>
	 <mx:RemoteObject id="JBPMService" destination="JBPMService" fault="faultHandler(event)">       
        <mx:method name="findProcessDefinition" result="resultReturnfindProcessDefinition(event)" fault="faultHandler(event)"/>
        <mx:method name="removeProceDef" result="resultReturnRemoveProceDef(event)" fault="faultHandler(event)"/>
        
    </mx:RemoteObject>
	<mx:VBox width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" verticalGap="0">
		<mx:HBox width="100%" height="22" verticalAlign="middle" horizontalAlign="left">
			<mx:ComboBox id="combo_prodef" labelField="name" creationComplete="findProcessDef();"
		 		change="changeCombo_prodef(event);" rowCount="15">
			</mx:ComboBox>
			<mx:Button label="启动一个工作流" click="startProcess();"/>
			<mx:Label text="任务ID"/>
			<mx:TextInput text="" id="taskid"/>
			<mx:Button label="下一步工作流" click="nextProcess();"/>
		</mx:HBox>
		
		
		<mx:HBox width="100%" height="16" verticalAlign="middle" horizontalAlign="right" >
	           <mx:Image width="16" height="16" source="{BindImg.page_new}" toolTip="任务权限分配" click="taskDistr()" />
	           
     	</mx:HBox>
		<mx:AdvancedDataGrid id="adg" 
			designViewDataType="flat" width="100%" height="100%"  >
			<mx:columns>
				<mx:AdvancedDataGridColumn headerText="任务ID"  dataField="taskid" />
				<mx:AdvancedDataGridColumn headerText="任务名称"  dataField="taskname"/>
				<mx:AdvancedDataGridColumn headerText="任务处理角色编码"  dataField="rolecode" />
				<mx:AdvancedDataGridColumn headerText="任务处理角色名称"  dataField="rolename"/>
				<mx:AdvancedDataGridColumn headerText="任务处理用户编码"  dataField="usercode" />
				
				
			</mx:columns>
		</mx:AdvancedDataGrid>
	</mx:VBox>
</mx:Module>

