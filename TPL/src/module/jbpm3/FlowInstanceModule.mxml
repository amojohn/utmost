<?xml version="1.0" encoding="utf-8"?>
<mx:Module xmlns:mx="http://www.adobe.com/2006/mxml" layout="vertical" width="100%" height="100%"
	 creationComplete="init()">
	 <mx:Script>
	 	<![CDATA[
	 		import mx.events.CloseEvent;
	 		import mx.collections.ArrayCollection;
	 		import mx.rpc.events.ResultEvent;
	 		import org.utmost.service.AutoService;
	 		import mx.core.IFlexDisplayObject;
	 		import mx.managers.PopUpManager;
	 		import mx.controls.Alert;
	 		import org.utmost.tpl.PopType;
	 		import org.utmost.img.BindImg;
	 		import mx.rpc.events.FaultEvent;
	 		import org.utmost.service.StaticChannelSet;
			import org.utmost.component.upload.FileUpload;
			import org.utmost.service.UtmostService;
			import mx.collections.SortField;
            import mx.collections.Sort;

			import mx.events.ListEvent;
	 		private var tablename:String="";
	 		private function init():void {
	 			//dataInit();
	 		}
	 		
	 		public function dataInit():void {
	 			findProcessInstanList();
	 		}
	 		
	 		
	 		
			/**
	       * 根据任务节点ID终止当前流程实例
	       */
	 		public function endProcessInstan():void {
	 			
				if(adg.selectedIndex<0) {
					Alert.show("请选择你要提前终止的任务","提示");
					return;
				}
				
				var alert:Alert = Alert.show('是否要提前终止选择的任务!', '信息提示', Alert.YES | Alert.NO); 
				alert.addEventListener(CloseEvent.CLOSE,function (e:CloseEvent):void {
					switch(e.detail) {
						case Alert.YES:
							var us:UtmostService=new UtmostService("JBPMService",function(e:ResultEvent):void {
        					if(e.result!=null){
        						Alert.show("终止当前任务操作成功","提示！");
        					}	
        					});
							var taskID:String = adg.selectedItem.taskID;
							us.ro..endProcessInstan(taskID);
						break;
							case Alert.NO:
						break;	
					}
				}); 
	 		}
	 		/**
	 		 * 
	 		 * 为当前任务重新指定处理人
	 		 */ 
	 		private function openWindow(win:String,handle:String):void {
				if(handle==PopType.EDIT) {
					if(adg.selectedItem==null) {
						Alert.show("请选择要更改的数据!","提示");
						return;
					}
				}
				var obj:Object;
				switch(win) {
					case "FlowInstanceComponent":
						obj=PopUpManager.createPopUp(this.parentApplication as DisplayObject, FlowInstanceComponent, true);
					break;
					default:
						trace("参数错误!");
				}
				obj.$adg=adg;
				obj.$tablename=tablename;
				obj.$dataInit=dataInit;
				obj.$handle=handle;//操作类型
				PopUpManager.centerPopUp(obj as IFlexDisplayObject);
			} 
			public function updateActord():void{
			}
			private function faultHandler(event:FaultEvent):void {
				trace(event.fault);
     	     }
     	     
	      
	      
	       /**
	       * 获取所有的流程定义
	       */
	       public function  findProcessDef():void{
	       		var us:UtmostService=new UtmostService("JBPMService",function(e:ResultEvent):void {
        			if(e.result!=null){
        				combo_prodef.dataProvider = e.result as ArrayCollection;
        				findProcessInstanList();
        			}	
        		});
        		us.ro.findProcessDefinition();
	       }
	       public function changeCombo_prodef( event:ListEvent):void{
	       		
	       		findProcessInstanList();
	       		
	       //	event.currentTarget.selectedItem.@value;
	       }
	       /**
	       * 查找所有没有结束的流程实例
	       */ 
	       public function findProcessInstanList():void{
	       		var procdefid:String = combo_prodef.selectedItem.id;//流程定义ID
	       		var us:UtmostService=new UtmostService("JBPMService",function(e:ResultEvent):void {
        			if(e.result!=null){
    
						adg.dataProvider = e.result as ArrayCollection;
        			}	
        		});
        		if(procdefid!="")
        			us.ro.findProcessInstanList(procdefid,false);
	       }
	       //安数值大小排序
   			public function sortcompare(obj1:Object,obj2:Object):int{
   		        var num1:Number=Number(obj1.taskId.toString());
              
                var num2:Number=Number(obj2.taskId.toString());
               
                if(num1>num2){
                      return 1;
                 }else if(num1<num2){
                      return -1;
                 }else{
                      return 0;
                 }
            }
           
         
	 	]]>
	 </mx:Script>
	
	<mx:VBox width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" verticalGap="0">
		<mx:HBox width="100%" height="22" verticalAlign="middle" horizontalAlign="left">
			<mx:ComboBox id="combo_prodef" labelField="name" creationComplete="findProcessDef();"
		 		change="changeCombo_prodef(event);" rowCount="15">
			</mx:ComboBox>
			
		</mx:HBox>
		
		
		<mx:HBox width="100%" height="16" verticalAlign="middle" horizontalAlign="right" >
			   <mx:Image width="16" height="16" source="{BindImg.page_edit}" toolTip="更改处理人" click="openWindow('FlowInstanceComponent',PopType.EDIT);" />
	           <mx:Image width="16" height="16" source="{BindImg.page_delete}" toolTip="终止当前流程实例" click="endProcessInstan()" />
	           
	           
     	</mx:HBox>
		<mx:AdvancedDataGrid id="adg" 
			designViewDataType="flat" width="100%" height="100%"  >
			<mx:columns>
				<mx:AdvancedDataGridColumn headerText="流程实例ID"  dataField="processInstanceID" />
				<mx:AdvancedDataGridColumn headerText="当前任务"  dataField="taskname" />
				<mx:AdvancedDataGridColumn headerText="开始时间"  dataField="startDate" />
				<mx:AdvancedDataGridColumn headerText="结束时间"  dataField="endDate" />
				<mx:AdvancedDataGridColumn headerText="状态"  dataField="pro_status"/>
				<mx:AdvancedDataGridColumn headerText="检出状态"  dataField="checkOutActor"/>
				<mx:AdvancedDataGridColumn headerText="当前处理角色"  dataField="currRoleName"/>
				<mx:AdvancedDataGridColumn headerText="当前处理人"  dataField="currActorIDs"/>
			</mx:columns>
		</mx:AdvancedDataGrid>
	</mx:VBox>
</mx:Module>

