<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" layout="vertical" width="700" height="600" showCloseButton="true" xmlns:controls="com.sephiroth.controls.*" 
	close="PopUpManager.removePopUp(this)" creationComplete="init();" horizontalAlign="center" verticalAlign="middle">
	<mx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import org.utmost.tpl.ViewUtil;
			import mx.events.ChildExistenceChangedEvent;
			import mx.rpc.events.ResultEvent;
			import org.utmost.util.AutoUtil;
			import org.utmost.service.AutoService;
			import mx.containers.Form;
			import mx.controls.Alert;
			import mx.controls.AdvancedDataGrid;
			import mx.managers.PopUpManager;
			import mx.collections.XMLListCollection;
			import org.utmost.util.TreeUtil;
			import org.utmost.service.UtmostService;
			import org.utmost.util.ComponentUtil;
			import mx.events.ListEvent;
			import mx.collections.SortField;
            import mx.collections.Sort;
            
			public var $adg:AdvancedDataGrid;
			public var $form:Form;
			public var $tablename:String;
			public var $procdefName:String;//流程定义名称
			public var $procdefId:String;//流程定义Id
			
			public var tablename :String = "TASKROLE";
			public var selectUserIDs:String;//选中的用户ID
			
			//主页数据初始化
			public var $dataInit:Function;
			
			public function init():void {
				getProdefTask();
				initTree(roleTree,TreeUtil.getRoleMainByTree(),TreeUtil.getRoleKvByTree());
				//initTree(userTree,TreeUtil.getUserMainByTree(),TreeUtil.getUserKvByTree());
				findUserTree();
				
				//设置回车提交
				this.setFocus();
				this.addEventListener(KeyboardEvent.KEY_DOWN,function(e:KeyboardEvent):void {
					if(e.charCode==13) {
						editSubmit();
					}
				});
			}
			//获取流程定义节点信息
			public function getProdefTask():void{
	       		var us:UtmostService=new UtmostService("JBPMService",function(e:ResultEvent):void {
        			if(e.result!=null){
        				
						//设定Sort对象
						var m_sort:Sort = new Sort();
						m_sort.fields =  [new SortField("taskId")];
						var ac:ArrayCollection =  e.result as ArrayCollection;
						ac.sort = m_sort;
						ac.refresh();
						adg.dataProvider = ac;
        			}	
        		});
        		if($procdefName!="")
        			us.ro.findTaskNodename($procdefName);
	       }
			public function editSubmit():void {
				var service:AutoService=new AutoService();
				service.autoUpdate($tablename,$form,function(e:ResultEvent):void {
					$dataInit.call();
					close();
				});
			}
			private function close():void {
				$dataInit.call();
				PopUpManager.removePopUp(this);
			}
			private function findUserTree():void {
				/*AutoService.getInstance().findByHql("from U_USER",function(e:ResultEvent):void {
					var con:ArrayCollection=e.result as ArrayCollection;
					var xml:String="<node nodename=\"用户\" nodecode=\"root\" parentid=\"0\" >\n";
					for(var i:int=0;i<con.length;i++) {
						var obj:Object=con.getItemAt(i);
						xml+="<node "+"nodename=\""+obj.username+"\" "+"nodecode=\""+obj.usercode+"\" "+"uuid=\""+obj.uuid+"\" >\n";
						xml+="</node>\n";
					}
					xml+="</node>\n";
					trace("xml:"+xml);
					userTree.dataProvider=new XML(xml);
					callLater(function():void {
						ComponentUtil.ocAllTree(userTree);
					});
				});
			*/
			var xmlstr :String = "<node nodename=\"用户\" nodecode=\"root\" parentid=\"0\">" +
				                         "<node nodename=\"用户1\" nodecode=\"user1\" />"+
				                          "<node nodename=\"用户2\" nodecode=\"user2\" />"+
				                           "<node nodename=\"用户3\" nodecode=\"user3\" />"+
				                        "</node>";   
				var xml:XML=new XML(xmlstr);
				userTree.dataProvider=xml;
			}
			private function initTree(_tree:Tree,main:Object,kv:Object):void {
				var xmlstr :String = "<node nodename=\"角色\" nodecode=\"root\" parentid=\"0\">" +
				                         "<node nodename=\"角色1\" nodecode=\"role1\" />"+
				                          "<node nodename=\"角色2\" nodecode=\"role2\" />"+
				                           "<node nodename=\"角色3\" nodecode=\"role3\" />"+
				                        "</node>";   
				var xml:XML=new XML(xmlstr);
				_tree.dataProvider=xml;
				
				/*var ut:UtmostService=new UtmostService("TreeService",function(e:ResultEvent):void{
					trace("e.result:"+e.result);
					var xml:XML=new XML(e.result);
					_tree.dataProvider=xml;
					//_tree.selectedIndex=0;
					callLater(function():void {
						ComponentUtil.ocAllTree(_tree);
					});
				});
				ut.ro.getTree(main,kv);
				*/
			}
			private function treeClick(e:ListEvent):void {
				/*var o:XML=e.itemRenderer.data as XML;
				if(o.elements().length()==0) {
					flashData(e.currentTarget as Tree);
				}else {
					clearXML(getDataProvider(userTree));
				}*/
			}
			private function save(ac:ArrayCollection):void {
				AutoService.getInstance().saveAll(tablename,ac,function(e:ResultEvent):void {
					Alert.show("保存成功","提示");
					//shake.play();
				});
			}
			//保存使用
			private var saveAC:ArrayCollection;
			private function getDataProvider(_tree:Tree):XMLList {
				var o:XMLListCollection=_tree.dataProvider as XMLListCollection;
				var xmllist:XMLList=o.source as XMLList;
				return xmllist;
			}
			private function submit():void {
				
				var rolecode:String=roleTree.selectedItem.@nodecode.toString();//* roleTree
				var taskid = adg.selectedItem.taskId;
				saveAC=new ArrayCollection();
				selectUserIDs = "";
				findXML(getDataProvider(userTree));
				var o:Object=new Object(); 
				o.taskid = taskid;
				o.taskname = adg.selectedItem.taskName;
				o.rolecode = rolecode;
				o.rolename = roleTree.selectedItem.@nodename.toString();
				o.usercode = selectUserIDs;
				o.processname = $procdefName;
				o.processid = $procdefId;
				saveAC.addItem(o);
				
				
				var hql:String="from "+tablename+" v where v.taskid='"+taskid+"'";
				AutoService.getInstance().deleteByHql(hql,function(e:ResultEvent):void {
					save(saveAC);			
				});
			}
			/**
			 * 获取TreeCheckBox 选中的用户信息
			 */ 
			private function findXML(xmllist:XMLList):void {
				for each(var element:XML in xmllist) {
					if(element.@checked.toString()!=""&&element.@checked.toString()!="0") {
						
						if(element.@nodecode.toString()!=="root")
							selectUserIDs = selectUserIDs+element.@nodecode.toString()+";";
					}
					if(element.elements()!=null)
						findXML(element.elements());
				}
			}
		]]>
	</mx:Script>
	<mx:AdvancedDataGrid id="adg" 
			designViewDataType="flat" width="100%" height="100%"  >
			<mx:columns>
				<mx:AdvancedDataGridColumn headerText="任务ID"  dataField="taskId" />
				<mx:AdvancedDataGridColumn headerText="任务名称"  dataField="taskName"/>
				<mx:AdvancedDataGridColumn headerText="任务描述"  dataField="taskDescription"/>
			</mx:columns>
		</mx:AdvancedDataGrid>
	<mx:HBox width="100%" height="100%" verticalAlign="middle" horizontalAlign="center" horizontalGap="60">
		<mx:Tree id="roleTree" width="260" height="85%" labelField="@nodename" itemClick="treeClick(event)">
		</mx:Tree>
		<controls:TreeCheckBox id="userTree"  labelField="@nodename" itemCheck="userTree.onItemCheck( event )"
			 width="260" height="85%"  checkField="@checked" />
	</mx:HBox>
	<mx:ControlBar horizontalAlign="center" verticalAlign="middle">
		<mx:Button label="确定" click="submit()"/>
		<mx:Button label="取消" click="PopUpManager.removePopUp(this)"/>
		<mx:Button label="完成" click="close()"/>
	</mx:ControlBar>
</mx:TitleWindow>
