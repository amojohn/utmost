<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" 
	layout="vertical" applicationComplete="init()" horizontalScrollPolicy="off" xmlns:kapit="fr.kapit.*" preloader="org.utmost.component.MyPreloader" paddingTop="10" verticalGap="10" xmlns:skins="skins.brownie.skins.*" xmlns:code="http://code.google.com/p/flexlib/">
	<mx:Style source="skins/style.css"/>
	<!--<mx:Style source="skins/brownie/style.css"/>-->
	<mx:Script>
		<![CDATA[
			import module.portal.LoginComponent;	
			import component.MainPopUp;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import org.utmost.service.UtmostService;
			import org.utmost.service.StaticChannelSet;
			import mx.events.ResizeEvent;
			import mx.managers.IHistoryManager; 
			import ascb.util.NumberFormat;
			import mx.formatters.NumberFormatter;
			
			import flash.utils.setInterval;
			import org.utmost.util.ComponentUtil;
			import mx.controls.Alert;
			import mx.core.IFlexDisplayObject;
			import module.ModuleInterface;
			import mx.events.ModuleEvent;
			import mx.managers.PopUpManager;
			private var iHistoryManager:IHistoryManager;
			//public var REPORTPATH:String="http://localhost:8080/UtmostTPL/REPORT/";
			//public var DETECTPATH:String="http://localhost:8080/UtmostTPL/detect/"; 
			Alert.yesLabel="确定";
			Alert.noLabel="取消";
			public function init():void {
				//this.loadModule("module/DefaultModule.swf");
				//this.loadModule("module/PortalModule.swf");
				theme("vista");
				ComponentUtil.setVisible(MACB,false);
				showLogin();
				memoryMonitor();
				//this.loadModule("module/TPLModule.swf");
			}
			
			
			//登陆页面
			public function showLogin():void {
				var obj:IFlexDisplayObject=PopUpManager.createPopUp(this, LoginComponent, true);
				obj.addEventListener("LoginComponent_portal",function(e:Event):void {
					Application.application.loadModule("module/PortalModule.swf");
				});
				obj.addEventListener("LoginComponent_programme",function(e:Event):void {
					Application.application.loadModule("module/TPLModule.swf");
					ComponentUtil.setVisible(MACB,true);
				});
				PopUpManager.centerPopUp(obj);
				this.addEventListener(ResizeEvent.RESIZE,function(e:Event):void{
					PopUpManager.centerPopUp(obj);
				});
			}
			//装载模板
	        public function loadModule(name:String):void {
	        	removeModule();
	            currentModule.url = name;
	        }
	        //取消模板
	        public function removeModule():void {
	            currentModule.url = null;
	        }
	         
	        public var $modulecodeForChild:String;
	        public var $modulenameForChild:String;
	        public var $modulesystreeForChild:XML;
	        private function readyModule(e:ModuleEvent):void {
	        	var mobj:ModuleLoader=e.target as ModuleLoader;
	        	var child:ModuleInterface=mobj.child as ModuleInterface;
	        	if(child!=null) {
	        		child.$modulecode=$modulecodeForChild;
	        		child.$modulename=$modulenameForChild;
	        		child.$moduletree=$modulesystreeForChild;
	        	}
	        	$modulecodeForChild="";
	        	$modulenameForChild="";
	        	$modulesystreeForChild=null;
	        }
	        
	        private var nf:NumberFormat=new NumberFormat("###.00");
	        private function memoryMonitor():void {
	        	setInterval(function():void {
	        		var n:String=nf.format(System.totalMemory/1024/1024);
	        		memory.text="VM "+n+" MB";
	        	},1000);
	        	
	        	setInterval(function():void {
	        		//System.gc();
	        	},1000*60);
	        }
	        
	        private function SysMonitor():void {
	        	//ExternalInterface.call("window.open ('"+DETECTPATH+"', '系统监测', ', , top=0,left=0, toolbar=no, menubar=no, scrollbars=yes, resizable=yes,location=no, status=no') ");
	        }
	    
	    	public function reloadSys():void {
	    		var service:UtmostService=new UtmostService("SpringContext",function(e:ResultEvent):void {
	    			Alert.show('重新加载完毕!','提示');
	    		},function(e:FaultEvent):void {
	    			Alert.show('异常-->'+e.fault);
	    		});
	    		service.ro.reloadSpring();
	    	}
	    	
	    	/**
	    	 * 尝试PopUpManager
	    	 * */
	    	 private var mpu:MainPopUp=new MainPopUp();
	    	 private function createMainPopUp():void {
	    	 	mpu.width=500;
	    	 	mpu.height=60;
				resizeMainPopUp();
	    	 	this.addEventListener(ResizeEvent.RESIZE,function():void {
	    	 		resizeMainPopUp();
	    	 	});
	    	 	PopUpManager.addPopUp(mpu,this,false);
	    	 }
	    	 private function resizeMainPopUp():void {
	    	 	mpu.x=Application.application.width/2-mpu.width/2;
	    	 	mpu.y=Application.application.height-mpu.height-30;
	    	 }
	    	 
	    	 
	    	 
	    	 /**
	    	 * 主题切换
	    	 * */
	    	 private var black:String="skins/undefined/css/skinPreview.swf";
			 private var vista:String="skins/vista/VistaTheme.swf";
			 private var itunes7:String="skins/itunes7/ItunesTheme.swf";
			 private var brownie:String="skins/brownie/style.swf";
			
	    	 public function theme(name:String):void {
	    	 	try {
					if(name=="black") {
						clearTheme();
						StyleManager.loadStyleDeclarations(black,true);
					}
					if(name=="vista") {
						clearTheme();
						StyleManager.loadStyleDeclarations(vista,true);
					}
					if(name=="brownie") {
						clearTheme();
						StyleManager.loadStyleDeclarations(brownie,true);
					}
					if(name=="itunes7") {
						clearTheme();
						StyleManager.loadStyleDeclarations(itunes7,true);
					}
					if(name=="default") {
						clearTheme();
					}
	    	 	}catch(e:Error) {
	    	 		trace("Error:"+e.message.toString());
	    	 	}
	    	 }
	    	 public function clearTheme():void {
	    	 		StyleManager.unloadStyleDeclarations(black,true);
					StyleManager.clearStyleDeclaration(black,true);
					StyleManager.unloadStyleDeclarations(vista,true);
					StyleManager.clearStyleDeclaration(vista,true);
					StyleManager.unloadStyleDeclarations(brownie,true);
					StyleManager.clearStyleDeclaration(brownie,true);
					StyleManager.unloadStyleDeclarations(itunes7,true);
					StyleManager.clearStyleDeclaration(itunes7,true);
	    	 }
	    	 
	    	 
	    	 
		]]>
	</mx:Script>
	<mx:Blur id="ablur" blurXTo="50" blurYTo="50" duration="1000" />
	<mx:ApplicationControlBar id="MACB" dock="false" width="100%" paddingLeft="20" alpha="0.8" paddingTop="6">
		<mx:Button label="Portal" click="loadModule('module/PortalModule.swf')"/>
		<!--mx:Button label="TPL" click="loadModule('module/TPLModule.swf')"/-->
		<mx:Button label="Reload" click="reloadSys()"/>
		<!--mx:Button label="监测" click="SysMonitor()"/-->
		<mx:Label id="memory" color="#F2C423" fontFamily="Arial" fontWeight="bold" fontStyle="italic"/>
	</mx:ApplicationControlBar>
	<mx:ModuleLoader id="currentModule" width="100%" height="100%" ready="readyModule(event)" horizontalScrollPolicy="off">
	</mx:ModuleLoader>
	<kapit:KapInspect/>
	
	
	
	
	<!--处理CSS未引用警告-->
	<mx:HBox includeInLayout="false" visible="false">
		<mx:ButtonBar/>
		<mx:ColorPicker/>
		<mx:DateChooser/>
		<mx:DateField/>
		<mx:DividedBox/>
		<mx:HSlider/>
		<mx:MenuBar/>
		<mx:VSlider/>
		<mx:ToggleButtonBar/>
		<mx:TextArea/>
		<mx:TabBar/>
		<mx:RadioButton/>
		<mx:NumericStepper/>
		<mx:Image/>
		<mx:PopUpButton/>
		<mx:PopUpMenuButton/>
		<mx:LinkButton/>
		<mx:Accordion/>
		<mx:DataGrid/>
		<mx:HorizontalList/>
		<mx:HRule/>
		<mx:ProgressBar/>
		<mx:TabNavigator/>
		<mx:TileList/>
		<mx:VRule/>
		<code:WindowShade/>
	</mx:HBox>
</mx:Application>
